---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: path-rules
spec:
  rules:
    - http:
        paths:
          - path: /foo
            backend:
              serviceName: path-rules-foo
              servicePort: 80
          - path: /bar/
            backend:
              serviceName: path-rules-bar
              servicePort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: path-rules-foo
spec:
  selector:
    app: path-rules-foo
  ports:
    - name: http
      port: 80
      targetPort: http-api

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-foo
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: path-rules-foo
  template:
    metadata:
      labels:
        app: path-rules-foo
    spec:
      containers:
        - name: ingress-conformance-echo
          image: agervais/ingress-conformance-echo:latest
          imagePullPolicy: Always
          env:
            - name: TEST_ID
              value: path-rules-foo
          ports:
            - name: http-api
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 3

---

apiVersion: v1
kind: Service
metadata:
  name: path-rules-bar
spec:
  selector:
    app: path-rules-bar
  ports:
    - name: http
      port: 80
      targetPort: http-api

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: path-rules-bar
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: path-rules-bar
  template:
    metadata:
      labels:
        app: path-rules-bar
    spec:
      containers:
        - name: ingress-conformance-echo
          image: agervais/ingress-conformance-echo:latest
          imagePullPolicy: Always
          env:
            - name: TEST_ID
              value: path-rules-bar
          ports:
            - name: http-api
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 3
